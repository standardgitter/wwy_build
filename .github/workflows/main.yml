# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ mainX ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Run a multi-line script
        run: |
          curl -L -o v2ray.zip https://github.com/v2fly/v2ray-core/releases/latest/download/v2ray-linux-64.zip
          unzip v2ray.zip v2ctl
          ./v2ctl config config.json > wwy.pd
          ls -l
          git clone https://github.com/v2fly/v2ray-core.git
          cp -f all.go v2ray-core/main/distro/all/all.go
          sed -i 's/Bad Request/Error Request/g' v2ray-core/proxy/http/server.go
          sed -i 's/Bad Request/Error Request/g' v2ray-core/transport/internet/headers/http/http_test.go
          sed -i 's/Bad Request/Error Request/g' v2ray-core/transport/internet/headers/http/resp.go
          cd v2ray-core
          go mod download
          CGO_ENABLED=0 go build -o wwy.cgi -trimpath -ldflags "-s -w -buildid=" ./main
          ls -l
          mv wwy.cgi ../
          cd ..
          ls -l
          zip wwy.zip wwy.cgi wwy.pd
          echo builded.
          echo "GITHUB_DATE=$(date "+%Y%m%d%H%M%S")" >> $GITHUB_ENV
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.GITHUB_DATE }}
          release_name: ${{ env.GITHUB_DATE }}
          body: |
            Release 
            - None
            - None
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: wwy.zip
          asset_name: wwy.zip
          asset_content_type: application/zip

